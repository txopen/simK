devtools::check()
pkgdown::build_site()
devtools::document()
devtools::load_all()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::load_all()
devtools::check()
candidates_df()
devtools::load_all()
candidates_df()
abo()
abo
devtools::load_all()
devtools::check()
devtools::check()
abo()
devtools::load_all()
abo(5)
abo(5)
abo(5)
abo(5)
abo(5)
abo(5)
abo(5)
test_that("ABO blood group vector", {
expect_equal(abo(n=5), c("A", "O", "A", "O", "B"))
})
aGFR(age = 40)
aGFR(age = 43)
round(aGFR(age = 43),0)
aGFR(age = 43)
aGFR(age = 43)
aGFR(age = 43)
aGFR(age = 43)
aGFR(age = 43)
aGFR(age = 43)
aGFR(age = 43)
aGFR(age = 43)
aGFR(age = 43)
aGFR(age = 43)
aGFR(age = 43)
aGFR(age = 43)
aGFR(age = 43)
round(aGFR(age = 43),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
cpra(n = 100, probs = c(0.7, 0.1, 0.1, 0.1), seed.number = 123)
devtools::document()
devtools::load_all()
round(aGFR(age = 43, seed.number = 123),0)
cpra(n = 100, probs = c(0.7, 0.1, 0.1, 0.1), seed.number = 123)
cpra(n = 5, probs = c(0.7, 0.1, 0.1, 0.1), seed.number = 123)
cpra(n = 5, probs = c(0.7, 0.1, 0.1, 0.1), seed.number = 123)
cpra(n = 5, probs = c(0.7, 0.1, 0.1, 0.1), seed.number = 123)
cpra(n = 1, probs = c(0.7, 0.1, 0.1, 0.1), seed.number = 123)
cpra(n = 10, probs = c(0.7, 0.1, 0.1, 0.1), seed.number = 123)
cpra(n = 5, probs = c(0.7, 0.1, 0.1, 0.1), seed.number = 123)
test_that("eGFR by age", {
expect_equal(round(aGFR(age = 43, seed.number = 123),0), 95)
})
expect_equal(sum(cpra(n = 5, probs = c(0.7, 0.1, 0.1, 0.1), seed.number = 123)), 0)
test_that("eGFR by age", {
expect_equal(sum(cpra(n = 5, probs = c(0.7, 0.1, 0.1, 0.1), seed.number = 123)), 0)
})
dial(hiper = TRUE, bg = 'O', seed.number = 123)
dial(hiper = F, bg = 'O', seed.number = 123)
dial(hiper = F, bg = 'O', seed.number = 1)
dial(hiper = F, bg = 'A', seed.number = 1)
test_that("time on dialysis", {
expect_equal(dial(hiper = F, bg = 'A', seed.number = 1), 22)
})
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
candidates_df(n = 10,
replace = TRUE,
origin = 'PT',
probs_abo = c(0.43, 0.03, 0.08, 0.46),
probs_cpra = c(0.7, 0.1, 0.1, 0.1),
lower = 18, upper = 75, mean = 45, sd = 15,
prob_dm = 0.12,
uk = TRUE,
n_seed = 3)
candidates_df(n = 10,
replace = TRUE,
origin = 'PT',
probs_abo = c(0.43, 0.03, 0.08, 0.46),
probs_cpra = c(0.7, 0.1, 0.1, 0.1),
lower = 18, upper = 75, mean = 45, sd = 15,
prob_dm = 0.12,
uk = TRUE,
seed.number = 3)
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
install.packages("badger")
### badges
library(badger)
badge_devel("guangchuangyu/ggtree", "blue")
badge_lifecycle("stable")
badge_repostatus("Active")
badge_last_commit("GuangchuangYu/badger")
pkgdown::build_site()
badge_license("Artistic-2.0")
badge_license("CC-BY")
pkgdown::build_site()
pkgdown::build_site()
badge_last_commit("GuangchuangYu/badger")
badge_devel("guangchuangyu/ggtree", "blue")
badge_license("CC-BY4")
badge_license("CC-BY4")
badge_last_commit("GuangchuangYu/badger")
badge_github_actions("rossellhayes/ipa")
badge_github_actions("txopen/simK")
usethis::use_github_action_check_standard()
badge_devel("txopen/simK", "blue")
badge_devel("txopen/simK", "blue")
devtools::check()
pkgdown::build_site()
devtools::document()
devtools::load_all()
devtools::test()
pkgdown::build_site()
library(simK)
donors_df(n = 10,
replace = TRUE,
origin = 'PT',
probs = c(0.4658, 0.0343, 0.077, 0.4229),
lower = 18, upper = 75, mean = 55, sd = 15,
uk = FALSE,
seed.number = 3)
candidates_df(n = 10,
replace = TRUE,
origin = 'PT',
probs_abo = c(0.43, 0.03, 0.08, 0.46),
probs_cpra = c(0.7, 0.1, 0.1, 0.1),
lower = 18, upper = 75, mean = 45, sd = 15,
prob_dm = 0.12,
uk = TRUE,
seed.number = 3)
Abs_df(candidates = candidates_df(n=10),
origin = 'PT',
seed.number = 3)
devtools::install_github("txopen/simK")
library(simK)
pkgdown::build_site()
donors_df(n = 10,
replace = TRUE,
origin = 'PT',
probs = c(0.4658, 0.0343, 0.077, 0.4229),
lower = 18, upper = 75, mean = 55, sd = 15,
uk = FALSE,
seed.number = 3)
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
library(simK)
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
pkgdown::build_site()
pkgdown::build_site()
# Edit one or more files below R/.
# document() (if you’ve made any changes that impact help files or NAMESPACE)
# load_all()
# Run some examples interactively.
# test() (or test_file())
# check()
devtools::install_github("txopen/simK")
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
pkgdown::build_site()
devtools::test_coverage()
devtools::load_all()
devtools::test_coverage()
library(covr)
report()
devtools::test_coverage()
# Como criar a coverage localmente
devtools::load_all()
devtools::test_coverage()
# Criar configuração do codecov
usethis::use_coverage("codecov")
# Adicionar um ficheiro de test-coverage às actions do github
usethis::use_github_action("test-coverage")
devtools::test_coverage()
usethis::use_mit_license()
usethis::use_news_md(open = rlang::is_interactive())
ages(n = 1)
ages(n = 1)
ages(n = 1)
ages(n = 10)
ages(n = 10)
ages(n = 10, mean = 20, sd = 10)
ages(n = 1, mean = 20, sd = 10)
ages(n = 1, mean = 20, sd = 10)
ages(n = 1, mean = 25, sd = 13)
test_that("Ages", {
expect_equal(ages(n = 1, mean = 20, sd = 10),
36)
expect_equal(ages(n = 1, mean = 25, sd = 13),
22)
})
ages(n = 5, mean = 20, sd = 10, seed.number = 1)
ages(n = 5, mean = 25, sd = 13, seed.number = 1)
test_that("Ages", {
expect_equal(ages(n = 1, mean = 20, sd = 10),
36)
expect_equal(ages(n = 1, mean = 25, sd = 13),
22)
expect_equal(ages(n = 5, mean = 20, sd = 10, seed.number = 1),
c(22,36,23,25,27))
expect_equal(ages(n = 5, mean = 25, sd = 13, seed.number = 1),
c(27,46,29,31,35))
})
ages(n = 1, lower=50, upper=60, mean = 20, sd = 10)
ages(n = 1, lower=40, upper=50, mean = 25, sd = 13)
test_that("Ages", {
expect_equal(ages(n = 1, mean = 20, sd = 10),
36)
expect_equal(ages(n = 1, mean = 25, sd = 13),
22)
expect_equal(ages(n = 5, mean = 20, sd = 10, seed.number = 1),
c(22,36,23,25,27))
expect_equal(ages(n = 5, mean = 25, sd = 13, seed.number = 1),
c(27,46,29,31,35))
expect_equal(ages(n = 1, lower=50, upper=60, mean = 20, sd = 10),
53)
expect_equal(ages(n = 1, lower=40, upper=50, mean = 25, sd = 13),
40)
})
mmHLA()
expect_equal(mmHLA(),
c(0,2,1,3))
expect_equal(mmHLA(),
c(0,2,1,3))
expect_equal(mmHLA(),
c(mmA = 0, mmB = 2, mmDR = 1, mmHLA = 3))
test_that("number of HLA mm", {
expect_equal(mmHLA(),
c(mmA = 0, mmB = 2, mmDR = 1, mmHLA = 3))
})
test_that("number of HLA mm", {
expect_equal(mmHLA(),
c(mmA = 0, mmB = 2, mmDR = 1, mmHLA = 3))
expect_equal(mmHLA()$mmHLA,
mmHLA()$A + mmHLA()$mmB + mmHLA()$mmDR)
})
mmHLA()["mmHLA"]
test_that("number of HLA mm", {
expect_equal(mmHLA(),
c(mmA = 0, mmB = 2, mmDR = 1, mmHLA = 3))
expect_equal(mmHLA()["mmHLA"],
mmHLA()["mmA"] + mmHLA()["mmB"] + mmHLA()["mmDR"])
})
mmHLA()["mmA"]
mmHLA()["mmA"] + mmHLA()["mmB"] + mmHLA()["mmDR"]
(mmHLA()["mmA"] + mmHLA()["mmB"] + mmHLA()["mmDR"])
mmHLA()["mmHLA"]
(mmHLA()["mmA"] + mmHLA()["mmB"] + mmHLA()["mmDR"])[[1]]
mmHLA()["mmHLA"][[1]]
test_that("number of HLA mm", {
expect_equal(mmHLA(),
c(mmA = 0, mmB = 2, mmDR = 1, mmHLA = 3))
expect_equal(mmHLA()["mmHLA"][[1]],
(mmHLA()["mmA"] + mmHLA()["mmB"] + mmHLA()["mmDR"])[[1]])
})
test_that("number of HLA mm", {
expect_equal(mmHLA(dA = c('1','2'), dB = c('5','7'), dDR = c('1','4'),
cA = c('1','2'), cB = c('3','15'), cDR = c('4','7')),
c(mmA = 0, mmB = 2, mmDR = 1, mmHLA = 3))
expect_equal(mmHLA(dA = c('1','2'), dB = c('5','7'), dDR = c('4','4'),
cA = c('3','4'), cB = c('5','15'), cDR = c('4','7')),
c(mmA = 2, mmB = 1, mmDR = 0, mmHLA = 3))
expect_equal(mmHLA()["mmHLA"][[1]],
(mmHLA()["mmA"] + mmHLA()["mmB"] + mmHLA()["mmDR"])[[1]])
})
matchability()
matchability(cPRA = 100)
matchability(cPRA = 99)
matchability(cABO = 'A', cPRA = 85, seed.number = 3)
matchability(cABO = 'B', cPRA = 85, seed.number = 3)
matchability(cABO = 'AB', cPRA = 50, seed.number = 1)
matchability(cABO = 'O', cPRA = 0, seed.number = 1)
vpra()
vpra(abs = c('A1','A2','B5','DR4'), donors = D10K)
devtools::load_all()
vpra(abs = c('A1','A2','B5','DR4'), donors = D10K)
D10K
vpra(abs = c('A11','A30','DR8'), donors = D10K)
vpra(abs = c('DR13'), donors = D10K)
vpra(abs = c('A29'), donors = D10K)
test_that("virtual PRA", {
expect_equal(vpra(abs = c('A1','A2','B5','DR4'), donors = D10K),
70)
expect_equal(vpra(abs = c('A11','A30','DR8'), donors = D10K),
24.7)
expect_equal(vpra(abs = c('DR13'), donors = D10K),
28.5)
expect_equal(vpra(abs = c('A29'), donors = D10K),
10.9)
})
antbs()
test_that("virtual PRA", {
expect_equal(antbs(cA = c('2','29'), cB = c('7','15'), cDR = c('4','7'),
cPRA = 85,
origin = 'PT', seed.number = 3)$vPRA,
82.8)
})
antbs(cA = c('2','29'), cB = c('7','15'), cDR = c('4','7'),
cPRA = 50,
origin = 'PT', seed.number = 1)$vPRA,
antbs(cA = c('2','29'), cB = c('7','15'), cDR = c('4','7'),
cPRA = 50,
origin = 'PT', seed.number = 1)
test_that("virtual PRA", {
expect_equal(antbs(cA = c('2','29'), cB = c('7','15'), cDR = c('4','7'),
cPRA = 85,
origin = 'PT', seed.number = 3)$vPRA,
82.8)
expect_equal(antbs(cA = c('2','29'), cB = c('7','15'), cDR = c('4','7'),
cPRA = 50,
origin = 'PT', seed.number = 1)$vPRA,
50.1)
expect_equal(antbs(cA = c('2','29'), cB = c('7','15'), cDR = c('4','7'),
cPRA = 50,
origin = 'PT', seed.number = 1)$abs,
c("DR15","A24","B53","A1"))
})
test_that("virtual PRA", {
expect_equal(antbs(cA = c('2','29'), cB = c('7','15'), cDR = c('4','7'),
cPRA = 85,
origin = 'PT', seed.number = 3)$vPRA,
82.8)
expect_equal(antbs(cA = c('2','29'), cB = c('7','15'), cDR = c('4','7'),
cPRA = 50,
origin = 'PT', seed.number = 1)$vPRA,
50.1)
expect_equal(antbs(cA = c('2','29'), cB = c('7','15'), cDR = c('4','7'),
cPRA = 50,
origin = 'PT', seed.number = 1)$Abs,
c("DR15","A24","B53","A1"))
})
devtools::test()
devtools::document()
devtools::load_all()
devtools::test()
hla_sample()
hla_sample(n = 1000, replace = TRUE, origin = 'PT')
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
pkgdown::build_site()
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
remove.packages("simK")
pkgdown::build_site()
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
pkgdown::build_site()
pkgdown::build_site()
r badge_devel("txopen/simK", "blue")
badger::badge_devel("txopen/simK", "blue")
badger::badge_license("MIT")
pkgdown::build_site()
donors_df()
devtools::document()
devtools::load_all()
devtools::test()
donors_df()
candidates_df()
devtools::document()
devtools::load_all()
candidates_df()
devtools::document()
devtools::load_all()
candidates_df()
candidates_df() %>% summary()
candidates_df() %>%
count(urgent)
candidates_df() %>%
dplyr::count(urgent)
candidates_df(n=100) %>%
dplyr::count(urgent)
donors_df()
result1 <-  tibble::tribble(
~ID, ~bg, ~A1, ~A2, ~B1, ~B2, ~DR1, ~DR2, ~age,
'','','','','','','','','',
'','','','','','','','','',
'','','','','','','','','',
'','','','','','','','','',
)
expect_equal(donors_df(n=5)
)
donors_df(n=5)
result1 <-  tibble::tribble(
~ID, ~bg, ~A1, ~A2, ~B1, ~B2, ~DR1, ~DR2, ~age,
'D1','A','1','29','8','44','11','7',53,
'D2','O','2','3','7','57','4','8',57,
'D3','A','11','33','14','35','1','13',61,
'D4','O','24','30','49','58','11','11',62,
'D5','B','2','3','7','51','1','13',66,
)
expect_equal(donors_df(n=5),
result1)
hla
hla %>% dplyr::mutate_all(as.character)
devtools::document()
devtools::load_all()
expect_equal(donors_df(n=5),
result1)
donors_df(n=5)
result1
result1 <-  tibble::tribble(
~ID, ~bg, ~A1, ~A2, ~B1, ~B2, ~DR1, ~DR2, ~age,
'D1','A','1','29','8','44','11','7',53,
'D2','O','2','3','7','57','4','8',57,
'D3','A','11','33','14','35','1','13',61,
'D4','O','24','30','49','58','11','11',62,
'D5','B','2','3','7','51','1','13',66,
) |> as.data.frame()
expect_equal(donors_df(n=5),
result1)
expect_equal(donors_df(n=5) |>as.data.frame(),
result1)
expect_equal(donors_df(n=5) |>as.data.frame(),
result1)
result1
donors_df(n=5) |>as.data.frame()
donors_df(n=5) |> data.table::setDT()
donors_df(n=5) |> data.table::setDT(),
result1 |> data.table::setDT()
expect_equal(donors_df(n=5) |> data.table::setDT(),
result1 |> data.table::setDT())
expect_equal(donors_df(n=5) |> data.table::setDT(),
result1 |> data.table::setDT())
result1
result1 |> data.table::setDT()
result1
donors_df(n=5) |> classe()
donors_df(n=5) |> class()
result1 <-  tibble::tribble(
~ID, ~bg, ~A1, ~A2, ~B1, ~B2, ~DR1, ~DR2, ~age,
'D1','A','1','29','8','44','11','7',53,
'D2','O','2','3','7','57','4','8',57,
'D3','A','11','33','14','35','1','13',61,
'D4','O','24','30','49','58','11','11',62,
'D5','B','2','3','7','51','1','13',66,
)
result1 |> class()
hla_sample(n = 1000, replace = TRUE, origin = 'API')
hla_sample_mndp(n = 1000, replace = TRUE, origin = 'CAU')
source("~/2.PhD/HEADS/simK/tests/testthat/test_dfs.R", echo=TRUE)
result1 |> as_tibble() |> class()
result1 |> tibble::as_tibble() |> class()
donors_df(n=5) |> tibble::as_tibble() |> class()
expect_equal(donors_df(n=5) |> tibble::as_tibble() |> class(),
result1 |> tibble::as_tibble() |> class()
)
expect_equal(donors_df(n=5) |> tibble::as_tibble() |> class(),
result1 |> tibble::as_tibble() |> class()
)
donors_df(n=5) |> class()
devtools::document()
devtools::load_all()
result1 <-  tibble::tribble(
~ID, ~bg, ~A1, ~A2, ~B1, ~B2, ~DR1, ~DR2, ~age,
'D1','A','1','29','8','44','11','7',53,
'D2','O','2','3','7','57','4','8',57,
'D3','A','11','33','14','35','1','13',61,
'D4','O','24','30','49','58','11','11',62,
'D5','B','2','3','7','51','1','13',66,
)
expect_equal(donors_df(n=5) |> class(),
result1 |> tibble::as_tibble() |> class()
)
expect_equal(donors_df(n=5),
result1
)
donors_df(n=5)
result1
donors_df(n=5)  |> class()
result1 |> class()
expect_identical(donors_df(n=5)  |> class(),
result1 |> class()
)
expect_identical(donors_df(n=5),
result1
)
expect_identical(donors_df(n=5),
donors_df(n=5))
expect_identical(donors_df(n=5),
result1)
expect_that(donors_df(n=5), equals(result1))
res0 <- donors_df(n=5)
expect_that(res0, equals(result1))
expect_identical(res0,
result1)
