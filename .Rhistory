result1)
result1
donors_df(n=5) |>as.data.frame()
donors_df(n=5) |> data.table::setDT()
donors_df(n=5) |> data.table::setDT(),
result1 |> data.table::setDT()
expect_equal(donors_df(n=5) |> data.table::setDT(),
result1 |> data.table::setDT())
expect_equal(donors_df(n=5) |> data.table::setDT(),
result1 |> data.table::setDT())
result1
result1 |> data.table::setDT()
result1
donors_df(n=5) |> classe()
donors_df(n=5) |> class()
result1 <-  tibble::tribble(
~ID, ~bg, ~A1, ~A2, ~B1, ~B2, ~DR1, ~DR2, ~age,
'D1','A','1','29','8','44','11','7',53,
'D2','O','2','3','7','57','4','8',57,
'D3','A','11','33','14','35','1','13',61,
'D4','O','24','30','49','58','11','11',62,
'D5','B','2','3','7','51','1','13',66,
)
result1 |> class()
hla_sample(n = 1000, replace = TRUE, origin = 'API')
hla_sample_mndp(n = 1000, replace = TRUE, origin = 'CAU')
source("~/2.PhD/HEADS/simK/tests/testthat/test_dfs.R", echo=TRUE)
result1 |> as_tibble() |> class()
result1 |> tibble::as_tibble() |> class()
donors_df(n=5) |> tibble::as_tibble() |> class()
expect_equal(donors_df(n=5) |> tibble::as_tibble() |> class(),
result1 |> tibble::as_tibble() |> class()
)
expect_equal(donors_df(n=5) |> tibble::as_tibble() |> class(),
result1 |> tibble::as_tibble() |> class()
)
donors_df(n=5) |> class()
devtools::document()
devtools::load_all()
result1 <-  tibble::tribble(
~ID, ~bg, ~A1, ~A2, ~B1, ~B2, ~DR1, ~DR2, ~age,
'D1','A','1','29','8','44','11','7',53,
'D2','O','2','3','7','57','4','8',57,
'D3','A','11','33','14','35','1','13',61,
'D4','O','24','30','49','58','11','11',62,
'D5','B','2','3','7','51','1','13',66,
)
expect_equal(donors_df(n=5) |> class(),
result1 |> tibble::as_tibble() |> class()
)
expect_equal(donors_df(n=5),
result1
)
donors_df(n=5)
result1
donors_df(n=5)  |> class()
result1 |> class()
expect_identical(donors_df(n=5)  |> class(),
result1 |> class()
)
expect_identical(donors_df(n=5),
result1
)
expect_identical(donors_df(n=5),
donors_df(n=5))
expect_identical(donors_df(n=5),
result1)
expect_that(donors_df(n=5), equals(result1))
res0 <- donors_df(n=5)
expect_that(res0, equals(result1))
expect_identical(res0,
result1)
devtools::document()
devtools::load_all()
devtools::test()
invalid.numbers <- list(-1,'0','x','1',-10)
length(invalid.numbers)
expect_error(ages(n = invalid.numbers[[1]]))
expect_error(ages(n = invalid.numbers[[2]]))
expect_error(ages(n = invalid.numbers[[3]]))
expect_error(ages(n = invalid.numbers[[4]]))
expect_error(ages(n = invalid.numbers[[5]]))
invalid.numbers <- list(-1,'0','x','1',-10)
for(i in 1:length(invalid.numbers)){
expect_error(ages(n = invalid.numbers[[i]]))
expect_error(ages(lower = invalid.numbers[[i]]))
expect_error(ages(upper = invalid.numbers[[i]]))
expect_error(ages(mean = invalid.numbers[[i]]))
expect_error(ages(sd = invalid.numbers[[i]]))
}
expect_error(ages(lower = invalid.numbers[[1]]))
invalid.numbers[[1]]
ages(lower = invalid.numbers[[1]])
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
pkgdown::build_site()
devtools::test_coverage()
candidates_df()
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
pkgdown::build_site()
# Edit one or more files below R/.
# document() (if you’ve made any changes that impact help files or NAMESPACE)
# load_all()
# Run some examples interactively.
# test() (or test_file())
# check()
devtools::install_github("txopen/simK")
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
# Edit one or more files below R/.
# document() (if you’ve made any changes that impact help files or NAMESPACE)
# load_all()
# Run some examples interactively.
# test() (or test_file())
# check()
devtools::install_github("txopen/simK")
# Edit one or more files below R/.
# document() (if you’ve made any changes that impact help files or NAMESPACE)
# load_all()
# Run some examples interactively.
# test() (or test_file())
# check()
devtools::install_github("txopen/simK")
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
library(simK)
donors_df(n = 10,
replace = TRUE,
origin = 'PT',
probs = c(0.4658, 0.0343, 0.077, 0.4229),
lower=18, upper=75,
mean = 60, sd = 12,
uk = FALSE,
seed.number = 3)
candidates_df(n = 10,
replace = TRUE,
origin = 'PT',
probs.abo = c(0.43, 0.03, 0.08, 0.46),
probs.cpra = c(0.7, 0.1, 0.1, 0.1),
lower=18, upper=75,
mean = 45, sd = 15,
prob.dm = 0.12,
prob.urgent = 0.05,
uk = FALSE,
seed.number = 3)
candidates_df
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
pkgdown::build_site()
pkgdown::build_site()
devtools::test_coverage()
(100+84+50)/3
packageVersion("simK")
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.getenv("PATH")
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
pkgdown::build_site()
pkgdown::build_site()
devtools::load_all()
pkgdown::build_site()
library(simK)
candidates_df
# Edit one or more files below R/.
# document() (if you’ve made any changes that impact help files or NAMESPACE)
# load_all()
# Run some examples interactively.
# test() (or test_file())
# check()
devtools::install_github("txopen/simK")
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
devtools::document()
devtools::load_all()
devtools::test()
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
pkgdown::build_site()
devtools::test_coverage()
devtools::test_coverage()
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
pkgdown::build_site()
usethis::use_article("donors", title = "Donors from scratch")
devtools::install_github("txopen/simK")
library(simK)
hla_sample(n = 100, replace = TRUE, origin = 'API')
donors <- hla_sample(n = 100, replace = TRUE, origin = 'API')
# here we create a column with an unique identifier:
donors$ID <- paste0('ID', rownames())
# here we create a column with an unique identifier:
donors$ID <- paste0('ID', rownames(donors))
donors
donors <- hla_sample(n = 100, replace = TRUE, origin = 'API')
# here we create a column with an unique identifier:
donors$ID <- paste0('ID', rownames(donors))
donors
# here we create a column with an unique identifier:
donors$ID <- paste0('D', rownames(donors))
donors <- hla_sample(n = 100, replace = TRUE, origin = 'API')
# here we create a column with an unique identifier:
donors$ID <- paste0('D', rownames(donors))
donoirs$bg <- abo(n = nrow(donors), probs = c(A=0.46, AB=0.03, B=0.08, O=0.43))
donors$bg <- abo(n = nrow(donors), probs = c(A=0.46, AB=0.03, B=0.08, O=0.43))
donors
usethis::use_article("candidates", title = "Wait list from scratch")
candidates_df()
library(simK)
candidates
candidates <- candidates |>
dplyr::rowwise() |>
dplyr::mutate(dialysis0 = dial(hiper = hiper, bg = bg),
dialysis = purrr::map2_dbl(.x = bg,
.y = hiper,
~dial(hiper = .y, bg = .x, seed.number = 1))) |>
dplyr::select(tidyselect::startsWith('dia'), tidyselect::everything())
candidates_df()
devtools::document()
devtools::load_all()
devtools::test()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial()
dial(seed.number = 1)
dial(seed.number = 1)
dial(seed.number = 1)
dial(seed.number = 1)
dial(seed.number = 1)
dial(seed.number = 1)
dial(seed.number = 1)
dial(seed.number = 1)
dial(seed.number = 1)
dial(seed.number = 1)
dial(seed.number = 1)
dial(seed.number = 1)
dial(seed.number = 1)
dial(seed.number = 1)
candidates_df()
candidates_df()|>
mutate(dial0= purrr::map2_dbl(.x = bg,
.y = hiper,
~dial(hiper = .y, bg = .x, seed.number = NA)))
candidates_df()|>
dplyr::mutate(dial0= purrr::map2_dbl(.x = bg,
.y = hiper,
~dial(hiper = .y, bg = .x, seed.number = NA)))
candidates_df()|>
dplyr::rowwise() |>
dplyr::mutate(dialysis = dial(hiper = hiper, bg = bg, seed.number = NA))
candidates_df()|>
dplyr::rowwise() |>
dplyr::mutate(dial = dial(hiper = hiper, bg = bg, seed.number = NA))
candidates_df()|>
dplyr::rowwise() |>
dplyr::mutate(dial = dial(hiper = hiper, bg = bg, seed.number = NA))
candidates_df()|>
dplyr::rowwise() |>
dplyr::mutate(dial = dial(hiper = hiper, bg = bg, seed.number = NA))
devtools::document()
devtools::load_all()
devtools::test()
test_that("eGFR by age", {
expect_equal(round(aGFR(age = 43, seed.number = 123),0),
95)
expect_error(aGFR(age = -1))
expect_error(aGFR(age = 'x'))
expect_error(aGFR(age = 1000))
expect_error(aGFR(age = 0))
})
round(aGFR(age = 43, seed.number = 123)
round(aGFR(age = 43, seed.number = 123),0)
aGFR(age = 43, seed.number = 123)
aGFR(age = 43, seed.number = 123)
aGFR(age = 43, seed.number = 123)
aGFR(age = 43, seed.number = 123)
aGFR(age = 43, seed.number = 123)
aGFR(age = 43, seed.number = 123)
aGFR(age = 43, seed.number = 123)
aGFR(age = 43, seed.number = 123)
aGFR(age = 43, seed.number = 123)
aGFR(age = 43, seed.number = 123)
aGFR(age = 43, seed.number = 123)
aGFR(age = 43, seed.number = 123)
aGFR(age = 43, seed.number = 123)
aGFR(age = 43, seed.number = 123)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = NA),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
round(aGFR(age = 43, seed.number = 123),0)
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
pkgdown::build_site()
devtools::load_all()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
candidates_df()
devtools::load_all()
candidates_df()
sample(c(0,1), size = n, replace = TRUE, prob = 0.1)
sample(c(0,1), size = 10, replace = TRUE, prob = 0.1)
sample(c(0,1), size = 10, replace = TRUE, prob = c(0.9,0.1))
sample(c(0,1), size = 10, replace = TRUE, prob = c(0.9,0.1))
sample(c(0,1), size = 10, replace = TRUE, prob = c(0.9,0.1))
sample(c(0,1), size = 10, replace = TRUE, prob = c(0.9,0.1))
sample(c(0,1), size = 10, replace = TRUE, prob = c(0.9,0.1))
sample(c(0,1), size = 10, replace = TRUE, prob = c(0.9,0.1))
sample(c(0,1), size = 10, replace = TRUE, prob = c(0.9,0.1))
sample(c(0,1), size = 10, replace = TRUE, prob = c(0.9,0.1))
sample(c(0,1), size = 10, replace = TRUE, prob = c(0.9,0.1))
sample(c(0,1), size = 10, replace = TRUE, prob = c(0.9,0.1))
sample(c(0,1), size = 10, replace = TRUE, prob = c(0.9,0.1))
sample(c(0,1), size = 10, replace = TRUE, prob = c(0.9,0.1))
sample(c(0,1), size = 10, replace = TRUE, prob = c(0.9,0.1))
sample(c(0,1), size = 10, replace = TRUE, prob = c(0.9,0.1))
sample(c(0,1), size = 10, replace = TRUE, prob = c(0.9,0.1))
sample(c(0,1), size = 10, replace = TRUE, prob = c(0.9,0.1))
sample(c(0,1), size = 10, replace = TRUE, prob = c(0.9,0.1))
sample(c(0,1), size = 100, replace = TRUE, prob = c(0.95,0.05))
sample(c(0,1), size = 100, replace = TRUE, prob = c(0.95,0.05))
sample(c(0,1), size = 100, replace = TRUE, prob = c(0.95,0.05))
sample(c(0,1), size = 100, replace = TRUE, prob = c(0.95,0.05))
sample(c(0,1), size = 100, replace = TRUE, prob = c(0.95,0.05))
sample(c(0,1), size = 100, replace = TRUE, prob = c(0.95,0.05))
sample(c(0,1), size = 100, replace = TRUE, prob = c(0.95,0.05))
sample(c(0,1), size = 100, replace = TRUE, prob = c(0.95,0.05))
sample(c(0,1), size = 100, replace = TRUE, prob = c(0.95,0.05))
sample(c(0,1), size = 100, replace = TRUE, prob = c(0.95,0.05))
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
devtools::test_coverage()
devtools::test_coverage()
expect_error(dial(seed.number = 'x'))
devtools::document()
devtools::load_all()
devtools::test()
dial(seed.number = "x")
devtools::test_coverage()
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_site()
devtools::test_coverage()
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
devtools::test_coverage()
devtools::test_coverage()
pkgdown::build_site()
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
pkgdown::build_site()
pkgdown::build_site()
# Edit one or more files below R/.
# document() (if you’ve made any changes that impact help files or NAMESPACE)
# load_all()
# Run some examples interactively.
# test() (or test_file())
# check()
devtools::install_github("txopen/simK")
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
pkgdown::build_site()
devtools::document()
devtools::load_all()
pkgdown::build_site()
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
pkgdown::build_site()
devtools::test()
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
pkgdown::build_site()
pkgdown::build_site()
library(simK)
devtools::load_all()
library(simK)
candidates_df()
devtools::document()
devtools::load_all()
devtools::test()
devtools::check()
pkgdown::build_site()
pkgdown::build_site()
devtools::check()
pkgdown::build_site()
pkgdown::build_site()
devtools::check()
